4. Videoda Entitlayer katmanýna Concrete klasörü eklendi ve entityler tanýmlandý.

5. Videoda Paket yükleme iþlemleri yapýldý.

7. Videoda Classlar referanslarý verildi Data(Ent)-Busi(Data,Ent)-Dto(Ent)-WebApi(Hepsi)

8. Videoda DataAccesLayer katmanýnda Concrete adýnda klasör tanýmlandý ve klasörün içine context class eklendi ardýnda database baðlantýlarý
yapýldý ve oluþturulan entityler database entegre edildi.

9. Videoda DataAccesLayer Abstract klasörü oluþturduk ve bu klasörün içine IGenericDal oluþturuldu ve bu IGenericDal içine ekleme silme ve güncelleme iþlemleri
tanýmlandý ayriyetten entityler içinde özel interfaceler tanýmlandý özel durumlarda onlarýn içine tanýmlanacaktýr.

10. Videoda GenericRepostiroy oluþturuldu Tanýmlanan IGenericDal daki ekleme silme güncelleme iþlemlerini çalýþtýrýp database kaydetmek için kodlama iþlemlerinin
yapýldýðý yer.

11. Videoda DataAccesLayer EntityFramwork klasörü oluþturduk bu tanýmlanan klasörün için entitylerimize özel tanýmlanan metodlarý burada 
iþleme geçirmek için tanýmlanan bir katman þeklidir.

12. Videoda BusinessAccesLayer katmanýnda Concrete klasörü ve Abstract klasörü oluþturduk bu klasörlerin içine tanýmlama yapýldý ilk baþta
Abstract klasörünün içine IgenericService tanýmlandý sonra DataAccessLayer katmanýndaki IGenericDal daki ekleme silme güncelleme iþlemleri 
bu classýn içinede tanýmlanmýþ oldu, ve her bir classýmýz için birer interface serviceleri de tanýmlandý özel methodlarý oluþturmak için

13. Vidoda BusinessAccessLayer katmanýnda Concrete klasörü tanýmladýk concrete klasörünün içine ise Managerlarýmýzý tanýmladýk ve managerlarýn enregrelerini ise 
IGenericService ile ekleme silme ve güncelleme iþlemlerini yaptýk ardýndan bu iþlemleri ele geçirmek için DataAccessLayer katmanýnda tanýmladýðýmýz her bir class
için IStaffDal gibi örnek onun gibi methodlar Concretede manager içine tanýmlayýp generateconstracter geçtik ardýndan ekleme silme ve güncelleme iþlemleri için 
gerekli kodlamalarý yazdýk.

14. Videoda swagggerýn nasýl bir arayüz ve nasýk çalýþtýðýna dair bir deneme yapýldý ve Controller klasöründe ApiController seçip bir boþ controller
gelicek ve ardýndan içine get put delete gibi atrebütleri tanýmlayýp api de karþýmýza çýkardýk.

15. Videoda listeleme ve ekleme iþlemleri ApiControllerda yapýldý.

16. Videoda Güncelleme silme ve Id'ye göre getirme iþlemlerini yaptýk. 

17. Videoda Bütün entitylerimiz için bir ApiController tanýmladýk ve onlarý birer get put ve delet etrabütleri ile çalýþtýrdýk. Yani ekelem silme ve güncelleme de
swagger yapabiliyormuyuz testini gerçekleþtirdik.

18. Videoda Temayý ekledik.

19. Videoda Web sitemizi programýmýza ekledik ve scriptleri ve gerekli yollarý verdik.

20. Videoda Web sitelerini partiallara ayýrdýk.

21. Videoda Apiyi frontend tarafýna consume etmek için gerekli Programcs de consume iþlemi uygulandu bakabilirsin.

22. Videoda WebUI StaffController tanýmlandý ve içine gerekli kodlar gelmesi için kodlar yazýldý ve bir index oluþturuldu. Kodlarý StaffControllerda inceleyebilirsin.
Ayriyetten hangilerini çaðýrmamýz gerekiyorse sitemizde nelerin gözükmesi için bir model oluþturuldu.

23. Videoda Tanýmlanan WebUý Tarafýnda Staff Index ile ilgili web sitemize gelmesi gereken iþlemleri yaptýk.

24. Videoda StaffController bir ekleme view için AddStaff oluþturuldu ardýnda ekleme yapmasýný için gerekli kodlarý AddStaff içine yazdý ve oluþturulan View 
tarafýnda AddStaff ise bir görünüm olarak gerekli kodlarý ve eklenecek iþlemleri aldý

25. Videoda Silme iþlemi yaptýk WEbUI tarafýnda StaffController içinde DeleteStaff olaný içine gerekli kodlar yazýlýp ApiController tarafýndada StaffController 
içinde delete olana HttpDelete parantez açýp id verdik.

26. Videoda StaffController için bir get ve post etrebütü oluþturduk. Gerekli olan bir Model oluþturmamýz lazým UpdateStaffViewModel olarak bir tane oluþturduk.
StaffControllerda ilk baþta get için yani personelin verilerini getirmek için get yerinin içini doldurduk.

27. Videoda Staff iþlemlerinin komple güncellenmesi için gerekli iþlemler post tarafýnda yaptýk yani baþlýk olarakta HttPost tarafýnda oldu.

28. Video Ýzle